from aiogram import Router, F
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, ReplyKeyboardRemove
from core.keyboards.start_kb import start_kb
from core.keyboards.income_kb import income_kb
from core.states.user_states import AddIncome

router = Router()

#TODO –°–¥–µ–ª–∞—Ç—å –≤–∞–ª–∏–¥–∞—Ü–∏—é –¥–∞–Ω–Ω—ã—Ö

@router.message(F.text == '‚ûï –î–æ–±–∞–≤–∏—Ç—å –¥–æ—Ö–æ–¥')
async def add_income_price(message: Message, state: FSMContext):
    await message.answer('üí∞ *–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏:*', reply_markup=ReplyKeyboardRemove(), parse_mode='Markdown')
    await state.set_state(AddIncome.ENTER_INCOME)

@router.message(AddIncome.ENTER_INCOME)
async def add_income_category(message: Message, state: FSMContext):
    await state.update_data(income=message.text)
    await message.answer('üìÇ *–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–æ—Ö–æ–¥–∞:*', reply_markup=income_kb, parse_mode='Markdown')
    await state.set_state(AddIncome.ENTER_CATEGORY)

@router.message(AddIncome.ENTER_CATEGORY)
async def save_income_data(message: Message, state: FSMContext):
    await state.update_data(category=message.text)

    #TODO –°–¥–µ–ª–∞—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ –±–¥
    data = await state.get_data()
    await message.answer(  '‚úÖ –î–æ—Ö–æ–¥ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω—ë–Ω!', reply_markup=start_kb)
    await state.clear()




