from aiogram import Router, F
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, ReplyKeyboardRemove

from core.keyboards.expense_kb import expense_kb
from core.keyboards.start_kb import start_kb
from core.states.user_states import AddExpense

router = Router()

#TODO –°–¥–µ–ª–∞—Ç—å –≤–∞–ª–∏–¥–∞—Ü–∏—é –¥–∞–Ω–Ω—ã—Ö
#TODO –°–¥–µ–ª–∞—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ –ª–∏–º–∏—Ç —Ç—Ä–∞—Ç

@router.message(F.text == '‚ûñ –î–æ–±–∞–≤–∏—Ç—å —Ä–∞—Å—Ö–æ–¥')
async def add_expense_name(message: Message, state: FSMContext):
    await message.answer('üõí –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –∏–ª–∏ —É—Å–ª—É–≥–∏:', reply_markup=ReplyKeyboardRemove())
    await state.set_state(AddExpense.ENTER_NAME)


@router.message(AddExpense.ENTER_NAME)
async def add_expense_amount(message: Message, state: FSMContext):
    await state.update_data(name=message.text)
    await message.answer('‚ûñ –¢–µ–ø–µ—Ä—å —É–∫–∞–∂–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ:')
    await state.set_state(AddExpense.ENTER_AMOUNT)


@router.message(AddExpense.ENTER_AMOUNT)
async def add_expense_amount(message: Message, state: FSMContext):
    await state.update_data(amount=message.text)
    await message.answer('üíµ –°–∫–æ–ª—å–∫–æ –≤—ã –ø–æ—Ç—Ä–∞—Ç–∏–ª–∏?')
    await state.set_state(AddExpense.ENTER_PRICE)


@router.message(AddExpense.ENTER_PRICE)
async def add_expense_category(message: Message, state: FSMContext):
    await state.update_data(price=message.text)
    await message.answer('üìÇ *–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ä–∞—Å—Ö–æ–¥–∞:*', reply_markup=expense_kb, parse_mode='Markdown')
    await state.set_state(AddExpense.ENTER_CATEGORY)


@router.message(AddExpense.ENTER_CATEGORY)
async def save_expense_data(message: Message, state: FSMContext):
    await state.update_data(category=message.text)

    #TODO –°–¥–µ–ª–∞—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ data –≤ –ë–î
    data = await state.get_data()
    await message.answer('‚úÖ –†–∞—Å—Ö–æ–¥ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω—ë–Ω!', reply_markup=start_kb)
    await state.clear()



